doctype html
//- basic libraries: jquery(1.10.2), d3js(3.3.11), angularjs(1.2.3), bootstrap(3.0)/semantic-ui(0.9.3/0.9.5)
- var use = { cdn: false, og: false, favicon: true }
- var lib = { jquery: true, d3js: true, angular: true, bootstrap: true, semantic: false }
- var assets = "/assets"
- var thumbnail = "thumbnail.png"
- var favicon = "thumbnail.png"
mixin paletteList(name)
  .palettes(id="palette-"+name)
    .palette(ng-repeat="pal in "+name)
      .name
        | {{pal.name}}
      .like
        i.glyphicon.glyphicon-remove(ng-show="pal.key",ng-click="delPal(pal)")
        i.glyphicon.glyphicon-chevron-up(ng-click="setpalette(pal)")
        i.glyphicon.glyphicon-heart(ng-class="{'active':pal.isFaved}",ng-click="favPal(pal)")
        | {{pal.fav || 0}}
      .palette-color
        .color(ng-repeat="c in pal",ng-attr-style="background:{{c.toHexString()}};width:{{c.width}}%",ng-click="setcolor(c,pal)")
      .tag cloud,blah,qwer

html(lang="en")
  head(prefix="og: http://ogp.me/ns#")
    meta(charset="utf-8")
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    title Loading.io Color Wheel Palettes Generator
    // libraries
    include library.jade
    // custom files
    link(rel="stylesheet",type="text/css",href="index.css")
    script(type="text/javascript",src="/global")
    script(type="text/javascript",src="/me/fav/palette")
    script(type="text/javascript",src="index.js")
    script(type="text/javascript",src="bower_components/tinycolor/tinycolor.js")
    script(type="text/javascript",src="scrollto.js")
  body(ng-app="ld.color",ng-controller="ldc-editor",ng-mousemove="wheel.move($event)",onmousewheel="scroll(event)")
    #nav-top
      nav.navbar.navbar-default(role="navigation")
        .container-fluid
          .navbar-header
            a.navbar-brand(href="#")
              | LOADING.IO
          .collapse.navbar-collapse
            ul.nav.navbar-nav
              li: a#nav-examples(href="http://loading.io") LOADERS
              li: a#nav-compatibility(href="http://loading.io/color") PALETTES
              li: a#nav-comment(href="#comment") CONTACT
              li: a#nav-more(href="#") MORE
            ul.nav.navbar-nav.pull-right
              li(ng-show="!user.data"): a#nav-login(href="#",ng-click="login.show=!!!login.show") LOGIN / SIGNUP
              li(ng-show="user.data"): a#nav-myset(href="#") MY WORKS
              li(ng-show="user.data")
                #nav-profile.dropdown
                  .btn(data-toggle="dropdown")
                    img(src="avatar.png")
                    span.caret
                  ul.dropdown-menu
                    li: a(href="#") Profile
                    li.divider
                    li: a(href="#",ng-click="login.logout()") Logout


                //-a#nav-profile(href="#",ng-show="user.data")
                //-| {{user.data.displayname}}
              //-li: a#nav-logout(ng-show="user.data") LOGOUT
              //-li.anim.profile.invis(ng-class="{'invis':!username}"): a(href="#")
                .avatar
                  img(ng-src="http://graph.facebook.com/{{uid}}/picture?type=small",ng-show="uid")
                .name {{username}}
              li: a(href="#") &#x2764;
              //li: a(href="http://github.com/zbryikt/loading/") GITHUB
              //-
                li.logon(ng-show="!accessToken"): a(href="#",ng-click="login()") LOGIN
                li.logon.ng-hide(ng-show="accessToken"): a(href="#",ng-click="logout()") LOGOUT
    #login-panel-outer(ng-class="{'active':login.show}"): #login-panel-inner
      .close-btn(ng-click="login.show=!!!login.show"): i.glyphicon.glyphicon-remove
      .title
        | LOADING.IO
      .form
        .btn.btn-primary.btn-block Login With Facebook
        br
        .or
        br
        .input-group
          span.input-group-addon: i.glyphicon.glyphicon-user
          input.form-control(type="text", ng-model="login.email", placeholder="email")
        .input-group
          span.input-group-addon: i.glyphicon.glyphicon-lock
          input.form-control(type="password", ng-model="login.passwd", placeholder="password")
        .btn.btn-danger.btn-block(ng-click="login.login()") Login
        .hint.pull-right Sign up
        .hint forgot password ?

      
    #root
      #palette-string-dialog.modal.fade
        .modal-dialog
          .modal-content
            .modal-header
              button.close(type="button",data-dismiss="modal",aria-label="Close"): span &times;
              h4.modal-title title
            .modal-body
              h5 Your Palettes "{{name}}"
              .blockcontainer.palette-color(style="width:100%;display:inline-block")
                .color(ng-repeat="c in cc",ng-attr-style="background:{{c.toHexString()}};width:{{100/cc.length}}%;",
                       ng-class="{'active':$index==active,'dark':c.isDark()}")
                  .semantic
                    i.glyphicon.glyphicon-exclamation-sign(ng-show="c.semantic.value=='warning'")
                    i.glyphicon.glyphicon-info-sign(ng-show="c.semantic.value=='info'")
                    i.glyphicon.glyphicon-ok-sign(ng-show="c.semantic.value=='success'")
                    i.glyphicon.glyphicon-remove-sign(ng-show="c.semantic.value=='danger'")
                    i.glyphicon.glyphicon-asterisk(ng-show="c.semantic.value=='primary'")
                    i.glyphicon.glyphicon-record(ng-show="c.semantic.value=='default'")
              h5 JSON Code
              textarea.form-control(ng-model="paletteString",rows="6",onclick="this.select()")
            .modal-footer
              button.btn.btn-default(type="button",data-dismiss="modal") Close

      #landing
        br
        h2 Semantic Colors, Programmable Palettes.
        p Color wheel, code codes, palette... We use them all the day. But we never make them ease to use. It's not true from now on.
        br
        br
      #mask.dim
      #editor
        #wheel
          svg#svg(width="400px",height="400px",viewBox="0 0 400 400",preserveAspectRatio="xMidYMin",style="display:block;")
            defs
            radialgradient#gradient(cx="50%",y="50%",fx="50%",fy="50%",r="50%",spreadMethod="pad")
              stop(offset="0%",stop-color="rgba(128,128,128,1)",stop-opacity="1")
              stop(offset="100%",stop-color="rgba(128,128,128,1)",stop-opacity="0")
            g.hue(transform="translate(200 200)")
            g.sat(transform="translate(200 200)")
            g.lit(transform="translate(200 200)")
            g.fin(transform="translate(200 200)")
            g.ptrs(transform="translate(200 200)")
              circle#hue.ptr
              circle#sat.ptr
              circle#lit.ptr
            g#color-area(ng-click="wheel.add()")
              circle(cx="200",cy="200",r="60",stroke="#eee",stroke-width="1",fill="#f9f9f9")
            g#center-ptr(ng-attr-transform="translate({{wheel.x}},{{wheel.y}})")
              line(x1="0",y1="0",x2="10",y2="10",stroke="#000",stroke-width="2")
              line(x1="10",y1="0",x2="0",y2="10",stroke="#000",stroke-width="2")
          //-.pull-right
            | or, input directly:
            br
            input.form-control.input-sm(placeholder="e.g., #facebc",style="width:100px")

        #editor-detail
          .colorblocks
            h3.title.btns
              span#name(ng-show="!editor.editNameToggled",ng-click="editor.toggleEditName()")
                | {{cc.name}}
                //-input#palette-name(type="text",value="Your Palette",style="border:none")
              input#name-input.form-control.input-sm(style="",ng-model="cc.name",ng-show="editor.editNameToggled")
              small
                .btn.btn-xs.btn-default(style="vertical-align:middle",ng-click="editor.toggleEditName()",ng-show="!editor.editNameToggled")
                  i.glyphicon.glyphicon-edit(style="vertical-align:top")
                .btn.btn-xs.btn-default(style="vertical-align:middle",ng-click="editor.toggleEditName()",ng-show="editor.editNameToggled")
                  i.glyphicon.glyphicon-ok-sign(style="vertical-align:top;color:#4b4")
                .pull-right
                  .btn.btn-xs.btn-default(data-toggle="tooltip",data-placement="top",title="save")
                    i.glyphicon.glyphicon-floppy-disk(ng-click="savePal()")
                  .btn.btn-xs.btn-default(data-toggle="tooltip",data-placement="top",title="detail")
                    i.glyphicon.glyphicon-info-sign(ng-click="showPaletteStringDialog()")
                  #download-palette.btn.btn-xs.btn-default(data-toggle="tooltip",data-placemnet="top",title="download")
                    i.glyphicon.glyphicon-download-alt(ng-click="editor.output.prepare(cc)")
                  .btn.btn-xs.btn-default(ng-click="randomCc()",data-toggle="tooltip",data-placement="top",title="shuffle")
                    i.glyphicon.glyphicon-random
                  .btn.btn-xs.btn-default(ng-click="undo()",ng-class="{'disabled':editor.history.isEmpty}",
                  data-toggle="tooltip",data-placement="top",title="undo"): i.glyphicon.glyphicon-arrow-left
                  .btn.btn-xs.btn-default(ng-click="delPal(cc)",ng-disabled="!cc.key",style="color:#a02",
                  data-toggle="tooltip",data-placement="top",title="delete this palette"): i.glyphicon.glyphicon-remove
            .editor-palette
              .add-color(ng-click="wheel.add(true)"): i.glyphicon.glyphicon-plus
              .blockcontainer.palette-color(style="width:456px;display:inline-block;position:relative;")
                .color(ng-repeat="c in cc",ng-attr-style="background:{{c.toHexString()}};width:{{100/cc.length}}%;",
                       ng-click="setActive($index)",ng-class="{'active':$index==active,'dark':c.isDark()}",draggable="true",ondrag="drag.editor.color.drag(event)",ondragEnd="drag.editor.color.dragEnd(event)")
                  .semantic
                    i.glyphicon.glyphicon-exclamation-sign(ng-show="c.semantic.value=='warning'")
                    i.glyphicon.glyphicon-info-sign(ng-show="c.semantic.value=='info'")
                    i.glyphicon.glyphicon-ok-sign(ng-show="c.semantic.value=='success'")
                    i.glyphicon.glyphicon-remove-sign(ng-show="c.semantic.value=='danger'")
                    i.glyphicon.glyphicon-asterisk(ng-show="c.semantic.value=='primary'")
                    i.glyphicon.glyphicon-record(ng-show="c.semantic.value=='default'")
              .cursor(ng-attr-style="left:{{curpos}}px",ng-class="{'dark':cc[active].isDark()}")

          #cur-config.row
            .col-sm-4
              label color code
              input.form-control(placeholder="e.g., #facebc",ng-model="colorcode")
            .col-sm-5
              label semantic
              select.form-control(ng-model="semantic.value",ng-options="opt as opt.label for opt in semantic.options")
            .col-sm-3
              label &nbsp;
              .btn.btn-danger.form-control(ng-click="wheel.delete()",ng-disabled="cc.length<=1")
                | remove
          h3.btns
            | References
            small
              .pull-right
                .btn.btn-xs.btn-default: i.glyphicon.glyphicon-random(ng-click="randomRefs()")

          .palettes.ref
            .palette.sm(ng-repeat="pal in refs")
              .name
                | {{pal.name}}
              .like
                i.glyphicon.glyphicon-heart
                //-| 5
              .palette-color
                .color(ng-repeat="c in pal",ng-attr-style="background:{{c.toHexString()}};width:{{c.width}}%",ng-click="setcolor(c)")
              .tag cloud,blah,qwer

        #editor-float.dim
          .editor-palette
            .add-color(ng-click="wheel.add(true)"): i.glyphicon.glyphicon-plus
            .blockcontainer.palette-color(style="width:456px;display:inline-block")
              .color(ng-repeat="c in cc",ng-attr-style="background:{{c.toHexString()}};width:{{100/cc.length}}%;",
                     ng-click="setActive($index)",ng-class="{'active':$index==active,'dark':c.isDark()}")
                .semantic
                  i.glyphicon.glyphicon-exclamation-sign(ng-show="c.semantic.value=='warning'")
                  i.glyphicon.glyphicon-info-sign(ng-show="c.semantic.value=='info'")
                  i.glyphicon.glyphicon-ok-sign(ng-show="c.semantic.value=='success'")
                  i.glyphicon.glyphicon-remove-sign(ng-show="c.semantic.value=='danger'")
                  i.glyphicon.glyphicon-asterisk(ng-show="c.semantic.value=='primary'")
                  i.glyphicon.glyphicon-record(ng-show="c.semantic.value=='default'")
            .cursor(ng-attr-style="left:{{curpos}}px",ng-class="{'dark':cc[active].isDark()}")
          .palettes.ref
            .palette.sm(ng-repeat="pal in refs")
              .name
                | {{pal.name}}
              .like
                i.glyphicon.glyphicon-heart
                //-| 5
              .palette-color
                .color(ng-repeat="c in pal",ng-attr-style="background:{{c.toHexString()}};width:{{c.width}}%",ng-click="setcolor(c)")
              .tag cloud,blah,qwer

      .clearfix
      hr 
      #section-indicator
        div#tab-randomPals(ng-click="scrollto('palette-randomPals')") Random
        div#tab-famousPals(ng-click="scrollto('palette-famousPals')") Famous
        div#tab-myFavs(ng-click="scrollto('palette-myFavs')") Favorite
        div#tab-myPals(ng-click="scrollto('palette-myPals')") My Palette
      h3 My Palette
      +paletteList('myPals')
      h3 Favorite Palette
      +paletteList('myFavs')
      h3 Famous Palette
      +paletteList('famousPals')
      h3.btns 
        | Random Palettes
        .btn.btn-xs.btn-default(ng-click="makeRandomPalettes()"): i.glyphicon.glyphicon-random
      +paletteList('randomPals')
