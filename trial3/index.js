// Generated by LiveScript 1.2.0
var x$, scroll;
x$ = angular.module('main', []);
x$.controller('main', ['$scope', '$timeout'].concat(function($scope, $timeout){
  var arc, data, buildData, init, render;
  arc = d3.svg.arc().innerRadius(100).outerRadius(120).startAngle(function(it){
    return it.start;
  }).endAngle(function(it){
    return it.start + it.size;
  });
  data = ['#f99'];
  buildData = function(){
    return data.map(function(d, i){
      return {
        start: Math.PI * 2 * i / data.length,
        size: Math.PI * 2 / data.length,
        color: d
      };
    });
  };
  init = function(d){
    var x$, y$;
    x$ = d3.select('#svg g.wheel').selectAll('path').data(d);
    y$ = x$.enter().append('path');
    y$.attr({
      "class": 'arc',
      opacity: 0
    });
    x$.exit().remove();
    return x$;
  };
  render = function(){
    var x$, y$;
    x$ = d3.select('#svg g.wheel').selectAll('path');
    y$ = x$.transition().duration(500);
    y$.attr({
      d: arc,
      fill: function(it){
        return it.color;
      },
      opacity: 1
    });
    return x$;
  };
  init(buildData());
  render();
  $scope.update = function(){
    var tc;
    tc = tinycolor(import$({}, $scope.hsl));
    console.log(tc.toHexString(), $scope.hsl);
    return d3.select('circle#color').attr({
      fill: tc.toHexString()
    });
  };
  $scope.hsl = {};
  $scope.click = function(){
    data.push(tinycolor(import$({}, $scope.hsl)).toHexString());
    console.log(")", data.map(function(it){
      return tinycolor(it).toHsl().h;
    }));
    data.sort(function(a, b){
      return tinycolor(b).toHsl().h - tinycolor(a).toHsl().h;
    });
    console.log(">", data.map(function(it){
      return tinycolor(it).toHsl().h;
    }));
    init(buildData());
    return render();
  };
  $scope.move = function(e){
    var ref$, w, h;
    ref$ = [$(window).width(), $(window).height()], w = ref$[0], h = ref$[1];
    $scope.hsl.h = 360 * e.clientX / w;
    $scope.hsl.s = e.clientY / h;
    return $scope.update();
  };
  return $scope.scroll = function(e){
    var ref$;
    $scope.hsl.l = $scope.hsl.l + 0.1 * e.wheelDeltaY / $(window).height();
    (ref$ = $scope.hsl).l <= 1 || (ref$.l = 1);
    (ref$ = $scope.hsl).l >= 0 || (ref$.l = 0);
    return $scope.update();
  };
}));
scroll = function(e){
  var s;
  s = angular.element("body").scope();
  return s.scroll(e);
};
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}