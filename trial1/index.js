// Generated by LiveScript 1.2.0
var x$, scroll;
x$ = angular.module('color', []);
x$.controller('main', ['$scope'].concat(function($scope){
  $scope.savedPal = [];
  $scope.pal = {
    hash: {},
    order: [],
    name: "untitled",
    save: function(){
      var data, item;
      data = (function(){
        var i$, ref$, len$, results$ = [];
        for (i$ = 0, len$ = (ref$ = this.order).length; i$ < len$; ++i$) {
          item = ref$[i$];
          results$.push(item.hex.replace(/#/, ''));
        }
        return results$;
      }.call(this)).join("-");
      return $scope.url = data;
    },
    load: function(data){
      var res$, i$, ref$, len$, hex, item;
      res$ = [];
      for (i$ = 0, len$ = (ref$ = data.split("-")).length; i$ < len$; ++i$) {
        hex = ref$[i$];
        res$.push($scope.build(null, hex));
      }
      this.order = res$;
      for (i$ = 0, len$ = (ref$ = this.order).length; i$ < len$; ++i$) {
        item = ref$[i$];
        this.hash[item.hex] = item;
      }
      return console.log(this.order, data);
    }
  };
  $scope.edit = {
    hsl: {
      h: 0,
      s: 0,
      l: 0
    },
    bind: null
  };
  $scope.update = function(){
    var tc, ref$, that;
    tc = tinycolor(import$({}, $scope.edit.hsl));
    ref$ = $scope.edit;
    ref$.color = tc.toHsl();
    ref$.hex = tc.toHexString();
    ref$.comp = tc.complement().toHexString();
    $scope.edit.triad1 = tinycolor((ref$ = import$({}, $scope.edit.color), ref$.h = ($scope.edit.color.h + 240) % 360, ref$.l = 0.5, ref$)).toHexString();
    $scope.edit.triad2 = tinycolor((ref$ = import$({}, $scope.edit.color), ref$.h = ($scope.edit.color.h + 0) % 360, ref$.l = 0.5, ref$)).toHexString();
    $scope.edit.triad3 = tinycolor((ref$ = import$({}, $scope.edit.color), ref$.h = ($scope.edit.color.h + 120) % 360, ref$.l = 0.5, ref$)).toHexString();
    $scope.edit.analog1 = tinycolor((ref$ = import$({}, $scope.edit.color), ref$.h = ($scope.edit.color.h + 320) % 360, ref$.l = 0.5, ref$)).toHexString();
    $scope.edit.analog2 = tinycolor((ref$ = import$({}, $scope.edit.color), ref$.h = ($scope.edit.color.h + 340) % 360, ref$.l = 0.5, ref$)).toHexString();
    $scope.edit.analog3 = tinycolor((ref$ = import$({}, $scope.edit.color), ref$.h = $scope.edit.color.h % 360, ref$.l = 0.5, ref$)).toHexString();
    $scope.edit.analog4 = tinycolor((ref$ = import$({}, $scope.edit.color), ref$.h = ($scope.edit.color.h + 20) % 360, ref$.l = 0.5, ref$)).toHexString();
    $scope.edit.analog5 = tinycolor((ref$ = import$({}, $scope.edit.color), ref$.h = ($scope.edit.color.h + 40) % 360, ref$.l = 0.5, ref$)).toHexString();
    $scope.edit.random = tinycolor({
      h: parseInt(Math.random() * 360),
      s: Math.random(),
      l: Math.random()
    }).toHexString();
    if (that = $scope.edit.bind) {
      return $scope.build(that);
    }
  };
  $scope.build = function(upon, src){
    var nc;
    if (!upon) {
      upon = {};
    }
    if (src) {
      nc = (upon.tinycolor = tinycolor(src), upon);
      nc.hsl = nc.tinycolor.toHsl();
    } else {
      nc = (upon.hsl = $scope.edit.hsl, upon);
      nc.tinycolor = tinycolor(import$({}, nc.hsl));
    }
    nc.hex = nc.tinycolor.toHexString().toUpperCase();
    nc.textColor = nc.tinycolor.isDark() ? 'rgba(255,255,255,0.5)' : 'rgba(0,0,0,0.5)';
    return nc;
  };
  $scope.scroll = function(e){
    var ref$;
    $scope.edit.hsl.l = $scope.edit.hsl.l + 0.1 * e.wheelDeltaY / $(window).height();
    (ref$ = $scope.edit.hsl).l <= 1 || (ref$.l = 1);
    (ref$ = $scope.edit.hsl).l >= 0 || (ref$.l = 0);
    return $scope.update();
  };
  $scope.move = function(e){
    var ref$, w, h;
    ref$ = [$(window).width(), $(window).height()], w = ref$[0], h = ref$[1];
    if (e.which === 1) {
      $scope.x = e.clientX - 5;
      $scope.y = e.clientY - 5;
      $scope.edit.hsl.h = 360 * e.clientX / w;
      $scope.edit.hsl.s = e.clientY / h;
      return $scope.update();
    }
  };
  $scope.debind = function(){
    var that;
    if (that = $scope.edit.bind) {
      that.active = false;
    }
    return $scope.edit.bind = null;
  };
  $scope.click = function(e, color, debind){
    var nc;
    debind == null && (debind = false);
    if (debind) {
      $scope.debind();
    }
    $scope.update();
    nc = $scope.build($scope.edit.bind, color);
    nc.active = false;
    $scope.edit.bind = null;
    if ($scope.pal.hash[nc.hex]) {
      return;
    }
    if (nc.oldHex && $scope.pal.hash[nc.oldHex]) {
      delete $scope.pal.hash[nc.oldHex];
    } else {
      $scope.pal.order.push(nc);
    }
    $scope.pal.hash[nc.hex] = nc;
    return $scope.pal.save();
  };
  return $scope.choose = function(c){
    var b, ref$, w, h;
    if (c === $scope.edit.bind) {
      return;
    }
    if ($scope.edit.bind) {
      b = $scope.edit.bind;
      b.active = false;
      $scope.build(b, b.oldHex);
    }
    c.oldHex = c.hex;
    c.active = true;
    $scope.edit.bind = c;
    $scope.edit.hsl = import$({}, c.tinycolor.toHsl());
    $scope.update();
    ref$ = [$(window).width(), $(window).height()], w = ref$[0], h = ref$[1];
    $scope.x = $scope.edit.hsl.h * w / 360 - 5;
    return $scope.y = $scope.edit.hsl.s * h - 5;
  };
}));
scroll = function(e){
  var s;
  s = angular.element("body").scope();
  return s.scroll(e);
};
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}